c(mean, sum)
c(mean, sum)[1]
typeof(c(mean, sum)[1])
c(mean, sum)[[1]]
typeof(c(mean, sum)[[1]])
c(mean, sum)[[1]](c(1,233,4))
c(mean, sum)[1](c(1,233,4))
library(installr)
updateR()
library(installr)
updateR()
library(ggplot2)
install.packages('ggplot2')
library(data.table)
install.packages('data.table')
library(INLA)
install.packages('INLA')
install.packages('inla')
install.packages('INLA')
library(glm)
library(MASS)
glm
?glm
?quasipoisson
data<-data.frame(id=seq(1, 20, by=1))
data$diab<- rbinom(20, 1, 0.5)
data$hyper<- rbinom(20, 1, 0.5)
data$chol<- rbinom(20, 1, 0.5)
#Age
data$age<-round(runif(20, 18, 80))
?
#Sex
data$sex<- rbinom(20, 1, 0.5)
data$sex<-factor(data$sex, labels=c("Male", "Female") )
#Race
race<-c(rep("White",5), rep("African american", 4), "Asian", "American Indian", "Other")
data$sex<-factor(data$sex, labels=c("Male", "Female") )
# Allie Wollum
# Generate data for HealtHRise mock up
rm(list=ls())
# General concept:
# Will create a dataset where each row is a patient with demographic info, visit info, diabetes empowerment scale, vital signs, biomarkers, referrals
data<-data.frame(id=seq(1, 20, by=1))
data$diab<- rbinom(20, 1, 0.5)
data$hyper<- rbinom(20, 1, 0.5)
data$chol<- rbinom(20, 1, 0.5)
#Age
data$age<-round(runif(20, 18, 80))
?
#Sex
data$sex<- rbinom(20, 1, 0.5)
data
data$sex<-factor(data$sex, labels=c("Male", "Female") )
data$sex<-as.factor(data$sex, labels=c("Male", "Female") )
factor(data$sex, labels=c("Male", "Female") )
?factor
data$sex
data$sex<- rbinom(20, 1, 0.5)
data$sex
data$sex<-factor(data$sex, labels=c("Male", "Female") )
# Allie Wollum
# Generate data for HealtHRise mock up
rm(list=ls())
# General concept:
# Will create a dataset where each row is a patient with demographic info, visit info, diabetes empowerment scale, vital signs, biomarkers, referrals
data<-data.frame(id=seq(1, 20, by=1))
data$diab<- rbinom(20, 1, 0.5)
data$hyper<- rbinom(20, 1, 0.5)
data$chol<- rbinom(20, 1, 0.5)
#Age
data$age<-round(runif(20, 18, 80))
#Sex
data$sex<- rbinom(20, 1, 0.5)
data$sex<-factor(data$sex, labels=c("Male", "Female") )
race<-c(rep("White",5), rep("African american", 4), "Asian", "American Indian", "Other")
data$race<-sample(race, 20, replace=T)
#Ethnicity
ethnicity<-c("Hispanic or latino", "non-Hispnic or latino")
data$ethnicity[data$race=="White"]<-sample(ethnicity, length(data$race[data$race=="White"]), replace=T)
# Insurance status
insurance<-c("uninsured","public", "private")
data$insurance<-sample(insurance, 20, replace=T)
# Language
data$language<- rbinom(20, 1, 0.5)
data$language<-factor(data$language, labels=c("English", "non-English"))
#Home visits
data$home_vist_month_1<- round(runif(20, 6, 8))
data$home_visit_year_1<-2016
home_providers<-c("CHW", "CP", "CP/CHW")
data$home_visit_provider<-1<-sample(home_providers, 20, replace=T)
for(i in 2/12) {
j<-i -1
data[,paste0("home_visit_month_", i)] <- data[, c(paste0("home_visit_month_", j))] + floor(runif(20, 0, 3))
}
# Allie Wollum
# Generate data for HealtHRise mock up
rm(list=ls())
# General concept:
# Will create a dataset where each row is a patient with demographic info, visit info, diabetes empowerment scale, vital signs, biomarkers, referrals
data<-data.frame(id=seq(1, 20, by=1))
data$diab<- rbinom(20, 1, 0.5)
data$hyper<- rbinom(20, 1, 0.5)
data$chol<- rbinom(20, 1, 0.5)
#Age
data$age<-round(runif(20, 18, 80))
#Sex
data$sex<- rbinom(20, 1, 0.5)
data$sex<-factor(data$sex, labels=c("Male", "Female") )
#Race
race<-c(rep("White",5), rep("African american", 4), "Asian", "American Indian", "Other")
data$race<-sample(race, 20, replace=T)
#Ethnicity
ethnicity<-c("Hispanic or latino", "non-Hispnic or latino")
data$ethnicity[data$race=="White"]<-sample(ethnicity, length(data$race[data$race=="White"]), replace=T)
# Insurance status
insurance<-c("uninsured","public", "private")
data$insurance<-sample(insurance, 20, replace=T)
# Language
data$language<- rbinom(20, 1, 0.5)
data$language<-factor(data$language, labels=c("English", "non-English"))
#Home visits
data$home_vist_month_1<- round(runif(20, 6, 8))
data$home_visit_year_1<-2016
data
data
data$home_visit_provider<-sample(home_providers, 20, replace=T)
home_providers<-c("CHW", "CP", "CP/CHW")
data$home_visit_provider<-sample(home_providers, 20, replace=T)
data
rbinom
rbinom(1, 100, 0.5)
rbinom(100, 1, 0.5)
source('~/.active-rstudio-document', echo=TRUE)
library(splines)
spline1 <- glm(y~ns(x,knots=c(500)),data=df,family=Gamma(link="log"))
summary(spline1)
plot(spline1)
glm
summary(spline1)
ns
summary(splin31)
summary(spline1)
ns(x, knots=c(500))
ns(x, knots=c(500))
summary(splin31)
ns(x, knots=c(500))
summary(spline1)
names(ns(x, knots=c(500)))
ns(x, knots=c(500))
install.packages('plotly')
volcano
library(plot_ly)
library(plotly)
plot_ly(z = volcano, type = "surface")
?plot_ly
source('~/.active-rstudio-document', echo=TRUE)
in.dt
in.dt[, pop := pop_neg + pop_lt200 + pop_200to350 + pop_gt350 + pop_art]
collapsed.dt[, inc := new_hiv/pop]
collapsed.dt <- in.dt[, .(pop=sum(pop), new_hiv=sum(new_hiv)), by=.(year, run_num, age)]
collapsed.dt[, inc := new_hiv/pop]
summary.dt <- collapsed.dt[, .(inc=mean(inc)), by=.(year, age)]
sumamry.dt
plot_ly(data=summary.dt, x=age, y=year, z=inc, type = "surface")
plot_ly(data=data.frame(summary.dt), x=age, y=year, z=inc, type = "surface")
summary.dt <- collapsed.dt[, .(inc=mean(inc), new_hiv=mean(new_hiv)), by=.(year, age)]
plot_ly(data=data.frame(summary.dt), x=age, y=year, z=new_hiv, type = "surface")
volcano
summary(.dt)
summary.dt
summary.dt <- collapsed.dt[, .(inc=mean(inc)), by=.(year, age)]
summary.dt
plot.list <- list(summary.dt)
plot.list
plot.list <- list(x=summary.dt[,year], y=summary.dt[,age], z=summary.dt[,inc])
plot.li
plot.list
plot_ly(plot.list, x = x, y = y, z = z, type = "surface")
source('~/.active-rstudio-document', echo=TRUE)
plot.list
summary.dt[, .(year, age, inc)]
dcast(summary.dt[, .(year, age, inc)] year ~ age)
dcast(summary.dt[, .(year, age, inc)], year ~ age)
dev.off()
plot.m <- dcast(summary.dt[, .(year, age, inc)], year ~ age)
plot.m
plot_ly(z=plot.m, type = "surface")
plot.m <- as.matrix(dcast(summary.dt[, .(year, age, inc)], year ~ age))
plot.m
)
plot.m <- as.matrix(dcast(summary.dt[, .(year, age, inc)], year ~ age))
names(plot.m)
colnames(plot.m)
colnames(plot.m[,-1])
plot.m <- as.matrix(dcast(summary.dt[, .(year, age, inc)], year ~ age)[,-1])
plot_ly(z=plot.m, type = "surface")
plot.m
plot.m <- as.matrix(dcast(summary.dt[, .(year, age, inc)], year ~ age))[,-1]
plot_ly(z=plot.m, type = "surface")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary.dt
setnames(summary.dt, c('year', 'age', 'hiv_deaths'), c('x', 'y', 'z'))
plot_ly(data.frame(summary.dt), x=x, y=y, z=z, type = "surface")
s <- matrix(c(1, .5, .5,
.5, 1, .5,
.5, .5, 1), ncol = 3)
obs <- mvtnorm::rmvnorm(200, sigma = s)
obs
df <- setNames(data.frame(obs), c("x", "y", "z"))
df
plot_ly(df, type = "scatter3d", mode = "markers")
plot_ly(df, x = x, y = y, z = z, type = "scatter3d", mode = "markers")
data.frame(summary.dt)
plot.df <- summary.dt[, .(year, age, hiv_deaths)]
summary.dt <- collapsed.dt[, .(inc=mean(inc), new_hiv=mean(new_hiv), hiv_deaths=mean(hiv_deaths)), by=.(year, age)]
plot.df <- summary.dt[, .(year, age, hiv_deaths)]
plot.df
plot.df <- data.frame(summary.dt[, .(year, age, hiv_deaths)])
setnames(plot.df, c('year', 'age', 'hiv_deaths'), c('x', 'y', 'z'))
plot_ly(plot.df, x=x, y=y, z=z, type = "surface")
df
plot.df
plot_ly(plot.df, x=x, y=y, z=z,type = "scatter3d", mode = "markers)
plot_ly(plot.df, x=x, y=y, z=z,type = "scatter3d", mode = "markers")
plot_ly(plot.df, x=x, y=y, z=z,type = "surface", mode = "markers")
plot_ly(plot.df, x=x, y=y, z=z,type = "surface")
kd <- with(MASS::geyser, MASS::kde2d(duration, waiting, n = 50))
with(kd, plot_ly(x = x, y = y, z = z, type = "surface"))
kd
plot.m <- melt(summary.dt[, .(year, age, hiv_deaths)], year ~ age)
summary.dt[, .(year, age, hiv_deaths)]
plot.m <- dcast(summary.dt[, .(year, age, hiv_deaths)], year ~ age)
plot.m
plot.m <- as.matrix(dcast(summary.dt[, .(year, age, hiv_deaths)], year ~ age))[,-1]
plot.m
plot.m <- as.matrix(dcast(summary.dt[, .(year, age, hiv_deaths)], year ~ age))
tmp.x <- plot.m[,year]
tmp.x <- plot.m[,1]
tmp.x
plot.m <- as.matrix(dcast(summary.dt[, .(year, age, hiv_deaths)], year ~ age))
plot.m <- dcast(summary.dt[, .(year, age, hiv_deaths)], year ~ age)
tmp.x <- plot.m[,year]
tmp.x
plot.m
plot.m[,year := NULL]
names(plot.m)
plot.list <- list(x=tmp.x, y=tmp.y, z=as.matrix(plot.m))
plot.m <- dcast(summary.dt[, .(year, age, hiv_deaths)], year ~ age)
tmp.x <- plot.m[,year]
plot.m[,year := NULL]
tmp.y <- as.integer(names(plot.m))
plot.list <- list(x=tmp.x, y=tmp.y, z=as.matrix(plot.m))
plot.list
plot_ly(z=plot.list, type = 'surface')
plot_ly(plot.list,x=x, y=y, z=z, type = 'surface')
tmp.x
x
names(plot.list)
tmp.x
tmp.y
plot_ly(plot.list,x=y, y=x, z=z, type = 'surface')
collapsed.dt <- in.dt[, .(pop=sum(pop), new_hiv=sum(new_hiv), hiv_deaths=sum(hiv_deaths), hiv_pop=sum(pop-pop_neg)), by=.(year, run_num, age)]
collapsed.dt[, prev:=hiv_pop/pop]
summary.dt <- collapsed.dt[, .(inc=mean(inc), new_hiv=mean(new_hiv), hiv_deaths=mean(hiv_deaths), prev=mean(prev)), by=.(year, age)]
collapsed.dt[, inc := new_hiv/pop]
summary.dt <- collapsed.dt[, .(inc=mean(inc), new_hiv=mean(new_hiv), hiv_deaths=mean(hiv_deaths), prev=mean(prev)), by=.(year, age)]
plot.m <- dcast(summary.dt[, .(year, age, prev)], year ~ age)
tmp.x <- plot.m[,year]
plot.m[,year := NULL]
tmp.y <- as.integer(names(plot.m))
plot.list <- list(x=tmp.x, y=tmp.y, z=as.matrix(plot.m))
plot_ly(plot.list,x=y, y=x, z=z, type = 'surface')
plot.list
names(plot.list)
plot.list <- list(Year=tmp.x, Age=tmp.y, Prevalence=as.matrix(plot.m))
plot.list <- list(Year=tmp.x, Age=tmp.y, Prevalence=as.matrix(plot.m))
plot_ly(plot.list,x=Age, y=Year, z=Prevalence, type = 'surface')
source('~/.active-rstudio-document', echo=TRUE)
plot_ly(plot.list,x=Age, y=Year, z=Prevalence,type = "scatter3d", mode = "markers")
plot_ly(summary.dt,x=age, y=year, z=mort,type = "scatter3d", mode = "markers")
library(splines)
splineDesign
binom
rbinom(1, 162, 0.5)
rbinom(1, 162, 0.5)
rbinom(1, 162, 0.5)
rbinom(1, 162, 0.5)
rbinom(1, 162, 0.5)
choose
162*0.5
source('~/.active-rstudio-document', echo=TRUE)
tmp.season
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hist(winner.list)
source('~/.active-rstudio-document', echo=TRUE)
162*0.5
162*0.5*(1-0.5)
sqrt(162*0.5*(1-0.5))
2*162
2*162 - sqrt(162/0.5)
source('~/.active-rstudio-document', echo=TRUE)
lcg.fn(0, 1, 2, 4)
lcg.fn(0, 1, 2, 4)
lcg.fn(0, 1, 2, 4)
lcg.fn(0, 1, 2, 4)
lcg.fn(1, 1, 2, 4)
lcg.fn(1, 1, 2, 4)
lcg.fn(1, 2, 2, 4)
lcg.fn(1, 2, 2, 4)
lcg.fn(1, 2, 2, 4)
lcg.fn(1, 2, 2, 4)
source('~/.active-rstudio-document', echo=TRUE)
lcg.fn(1, 9, 2, 0)
lcg.fn(1, 9, 2, 0)
lcg.fn(1, 9, 2, 0)
lcg.fn(1, 9, 2, 0)
source('~/.active-rstudio-document', echo=TRUE)
val.list
plot(val.list)
source('~/.active-rstudio-document', echo=TRUE)
plot(val.list, type='l')
source('~/.active-rstudio-document', echo=TRUE)
m
source('~/.active-rstudio-document', echo=TRUE)
m
a
c
curr.val
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
log(0.5/0.25)/10
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot_ly(summary.dt,x=age, y=year, z=mort,type = "Mesh3d", mode = "markers")
plot_ly(summary.dt,x=age, y=year, z=mort,type = "scatter3d")
plot_ly(summary.dt,x=age, y=year, z=mort,type = "surface")
plot_ly(summary.dt,x=age, y=year, z=mort,type = "surface3d")
plot_ly(summary.dt,x=age, y=year, z=mort,type = "surface")
plot_ly(z=plot.list,type = "surface")
plot.list <- list(y=tmp.x, x=tmp.y, z=as.matrix(plot.m))
plot_ly(summary.dt,x=age, y=year, z=mort,type = "surface")
plot_ly(z=mort,type = "surface")
plot_ly(z=plot.list,type = "surface")
plot.list
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface")
death.dt <- fread('C:/Users/twolock/Documents/FZ_downloads/spectrum_gpr_results.csv')
death.dt
death.dt <- death.dt[location_id==71]
death.dt
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=0.5)
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=0.8)
death.dt[,unique(age_group_id)]
death.dt[age_group_id < 6, age_group_id := 1]
death.dt
death.dt[,summary(gpr_mean)]
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=0.9)
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1.9)
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=.99)
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1)
plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=.999)
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=.999)
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=.999) %>% add_trace(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "scatter3d")
p
dev.off()
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=.999) %>% add_trace(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface") %>% add_trace(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "scatter3d",mode="markers")
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "scatter3d",mode="markers")
p
p <- plot_ly(summary.dt x=year, y=age, z=mort,type = "scatter3d",mode="markers")
p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface") %>% add_trace(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface") %>% add_trace(data=summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface") %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=0.5) %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=0.9999) %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
p
death.dt
death.dt <- fread('C:/Users/twolock/Documents/FZ_downloads/spectrum_gpr_results.csv')
death.dt <- death.dt[location_id==71]
death.dt[age_group_id < 6, age_group_id := 5]
death.dt[, age := (age_group_id-1)*5]
collapsed.dt
?plot_ly
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=0.9999, colors='YlOrRd') %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=0.9999, colors='Spectral') %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
p
collapsed.dt <- in.dt[sex=='male', .(pop=sum(pop), new_hiv=sum(new_hiv), hiv_deaths=sum(hiv_deaths), hiv_pop=sum(pop-pop_neg)), by=.(year, run_num, age)]
collapsed.dt
collapsed.dt[, inc := new_hiv/pop]
collapsed.dt[, prev:=hiv_pop/pop]
collapsed.dt[, mort:=hiv_deaths/pop]
summary.dt <- collapsed.dt[, .(inc=mean(inc), new_hiv=mean(new_hiv), hiv_deaths=mean(hiv_deaths), prev=mean(prev), mort=mean(mort)), by=.(year, age)]
plot.m <- dcast(summary.dt[, .(year, age, mort)], year ~ age)
tmp.x <- plot.m[,year]
plot.m[,year := NULL]
tmp.y <- as.integer(names(plot.m))
plot.list <- list(y=tmp.x, x=tmp.y, z=as.matrix(plot.m))
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d")
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>% add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers", symbols='cross')
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers", symbol='cross')
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>%
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers", symbol='cross')
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>%
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers", symbol='x')
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d"symbol='x')
p
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>%
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",symbol='x')
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>%
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers",symbol='x', color='grey')
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>%
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers",symbol='x', color='#FFFFFF')
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
p <- plot_ly(x=tmp.y, y=tmp.x, z=as.matrix(plot.m),type = "surface", opacity=1, colors='Spectral') %>%
add_trace(data=summary.dt, x=age, y=year, z=mort, type = "scatter3d",mode="markers")
#p <- plot_ly(summary.dt, x=year, y=age, z=mort, type = "scatter3d",mode="markers")
p
death.dt <- fread('C:/Users/twolock/Documents/FZ_downloads/spectrum_gpr_results.csv')
death.dt <- death.dt[location_id==71]
death.dt[age_group_id < 6, age_group_id := 5]
death.dt[, age := (age_group_id-1)*5]
summ.deaths <- death.dt[, .()]
summ.deaths <- death.dt[sex_id==1, .()]
rnorm(1000, 0, 5)
exp(rnorm(1000, 0, 5))
hist(exp(rnorm(1000, 0, 5)))
hist(exp(rnorm(1000, 0, 5)))
hist(exp(rnorm(1000, 0, 5)))
hist(exp(rnorm(1000, 0, 5)))
hist(exp(rnorm(1000, 0, 5)))
hist(exp(rnorm(1000, 0, 5)))
hist(exp(rnorm(1000, 0, 10)))
hist(exp(rnorm(1000, 0, 10)))
hist(exp(rnorm(1000, 0, 10)))
hist(exp(rnorm(1000, 0, 10)))
hist(exp(rnorm(1000, 0, 10)))
hist(exp(rnorm(1000, 0, 10)))
hist(exp(rnorm(1000, 0, 1)))
dgamma
rgamma(1000, 1, 1)
exp(rgamma(1000, 1, 1))
hist(exp(rgamma(1000, 1, 1)))
hist(exp(rgamma(1000, 1, 1)))
hist(exp(rgamma(1000, 1, 1)))
hist(exp(rgamma(1000, 1, 1)))
if (!require("devtools")) install.packages("devtools")
devtools::install_github("trestletech/shinyAce")
install.packages('digest')
q()
sessionInfo()
rm(list=ls())
if (!require("devtools")) install.packages("devtools")
devtools::install_github("trestletech/shinyAce")
devtools::install_github("trestletech/shinyAce")
setwd('~/Documents/Class/Thesis/')
library(editR)
editR('Thesis.Rmd')
setwd('H:/thesis/code/paper/')
editR('Thesis.Rmd')
load('../../data/tables_figures.RData')
number.plug$num.zero.firearm
